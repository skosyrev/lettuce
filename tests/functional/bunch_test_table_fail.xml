<features>
  <feature>
    <properties>
      <description type="unicode"></description>
      <max_length type="int">32</max_length>
      <name type="unicode">Table Success</name>
    </properties>
    <started>2012-04-10 19:46:16.348000</started>
    <scenarios>
      <scenario>
        <properties>
          <failed type="bool">True</failed>
          <indentation type="int">2</indentation>
          <max_length type="int">32</max_length>
          <name type="unicode">Add two numbers</name>
          <passed type="bool">False</passed>
          <ran type="bool">True</ran>
          <table_indentation type="int">4</table_indentation>
          <with_file type="str">C:\work\Openstack\lettuce\tests\functional\output_features\fail_table\fail_table.feature</with_file>
        </properties>
        <started>2012-04-10 19:46:16.357000</started>
        <steps>
          <step>
            <properties>
              <has_definition type="bool">True</has_definition>
              <indentation type="int">4</indentation>
              <max_length type="int">24</max_length>
              <multiline type="unicode"></multiline>
              <original_sentence type="unicode">Given I have 0 bucks</original_sentence>
              <proposed_method_name type="str">given_i_have_0_bucks(step)</proposed_method_name>
              <proposed_sentence type="unicode">Given I have 0 bucks</proposed_sentence>
              <ran type="bool">True</ran>
              <sentence type="unicode">Given I have 0 bucks</sentence>
              <table_indentation type="int">6</table_indentation>
              <passed type="bool">True</passed>
            </properties>
            <started>2012-04-10 19:46:16.367000</started>
            <finished>2012-04-10 19:46:16.371000</finished>
            <time>0.004001</time>
            <result>passed</result>
          </step>
          <step>
            <properties>
              <has_definition type="bool">True</has_definition>
              <hashes type="HashList">
                <item id="0" type="dict">
                  <itemvalue type="dict">
                    <item>
                      <key>price</key>
                      <value type="unicode">200000</value>
                    </item>
                    <item>
                      <key>name</key>
                      <value type="unicode">Porsche</value>
                    </item>
                  </itemvalue>
                </item>
                <item id="1" type="dict">
                  <itemvalue type="dict">
                    <item>
                      <key>price</key>
                      <value type="unicode">400000</value>
                    </item>
                    <item>
                      <key>name</key>
                      <value type="unicode">Ferrari</value>
                    </item>
                  </itemvalue>
                </item>
                <item id="2" type="dict">
                  <itemvalue type="dict">
                    <item>
                      <key>price</key>
                      <value type="unicode">1000000</value>
                    </item>
                    <item>
                      <key>name</key>
                      <value type="unicode">Bugatti</value>
                    </item>
                  </itemvalue>
                </item>
              </hashes>
              <indentation type="int">4</indentation>
              <keys type="tuple">
                <item id="0" type="unicode">name</item>
                <item id="1" type="unicode">price</item>
              </keys>
              <max_length type="int">32</max_length>
              <multiline type="unicode"></multiline>
              <original_sentence type="unicode">And that I have these items:</original_sentence>
              <proposed_method_name type="str">and_that_i_have_these_items(step)</proposed_method_name>
              <proposed_sentence type="unicode">And that I have these items:</proposed_sentence>
              <ran type="bool">True</ran>
              <sentence type="unicode">And that I have these items:</sentence>
              <table_indentation type="int">6</table_indentation>
              <passed type="bool">True</passed>
            </properties>
            <started>2012-04-10 19:46:16.382000</started>
            <finished>2012-04-10 19:46:16.386000</finished>
            <time>0.004001</time>
            <result>passed</result>
          </step>
          <step>
            <properties>
              <has_definition type="bool">True</has_definition>
              <indentation type="int">4</indentation>
              <max_length type="int">29</max_length>
              <multiline type="unicode"></multiline>
              <original_sentence type="unicode">When I sell the "Ferrari"</original_sentence>
              <proposed_method_name type="unicode">when_i_sell_the_group1(step, group1)</proposed_method_name>
              <proposed_sentence type="unicode">When I sell the "([^"]*)"</proposed_sentence>
              <ran type="bool">True</ran>
              <sentence type="unicode">When I sell the "Ferrari"</sentence>
              <table_indentation type="int">6</table_indentation>
              <passed type="bool">True</passed>
            </properties>
            <started>2012-04-10 19:46:16.397000</started>
            <finished>2012-04-10 19:46:16.401000</finished>
            <time>0.004001</time>
            <result>passed</result>
          </step>
          <step>
            <properties>
              <has_definition type="bool">True</has_definition>
              <indentation type="int">4</indentation>
              <max_length type="int">28</max_length>
              <multiline type="unicode"></multiline>
              <original_sentence type="unicode">And I sell the "Porsche"</original_sentence>
              <proposed_method_name type="unicode">and_i_sell_the_group1(step, group1)</proposed_method_name>
              <proposed_sentence type="unicode">And I sell the "([^"]*)"</proposed_sentence>
              <ran type="bool">True</ran>
              <sentence type="unicode">And I sell the "Porsche"</sentence>
              <table_indentation type="int">6</table_indentation>
              <passed type="bool">True</passed>
            </properties>
            <started>2012-04-10 19:46:16.409000</started>
            <finished>2012-04-10 19:46:16.412000</finished>
            <time>0.003001</time>
            <result>passed</result>
          </step>
          <step>
            <properties>
              <has_definition type="bool">True</has_definition>
              <indentation type="int">4</indentation>
              <max_length type="int">28</max_length>
              <multiline type="unicode"></multiline>
              <original_sentence type="unicode">Then I have 600000 bucks</original_sentence>
              <proposed_method_name type="str">then_i_have_600000_bucks(step)</proposed_method_name>
              <proposed_sentence type="unicode">Then I have 600000 bucks</proposed_sentence>
              <ran type="bool">True</ran>
              <sentence type="unicode">Then I have 600000 bucks</sentence>
              <table_indentation type="int">6</table_indentation>
              <passed type="bool">True</passed>
            </properties>
            <started>2012-04-10 19:46:16.420000</started>
            <finished>2012-04-10 19:46:16.425000</finished>
            <time>0.005001</time>
            <result>passed</result>
          </step>
          <step>
            <properties>
              <has_definition type="bool">True</has_definition>
              <hashes type="HashList">
                <item id="0" type="dict">
                  <itemvalue type="dict">
                    <item>
                      <key>price</key>
                      <value type="unicode">1000000</value>
                    </item>
                    <item>
                      <key>name</key>
                      <value type="unicode">Bugatti</value>
                    </item>
                  </itemvalue>
                </item>
                <item id="1" type="dict">
                  <itemvalue type="dict">
                    <item>
                      <key>price</key>
                      <value type="unicode">200000</value>
                    </item>
                    <item>
                      <key>name</key>
                      <value type="unicode">Porsche</value>
                    </item>
                  </itemvalue>
                </item>
              </hashes>
              <indentation type="int">4</indentation>
              <keys type="tuple">
                <item id="0" type="unicode">name</item>
                <item id="1" type="unicode">price</item>
              </keys>
              <max_length type="int">27</max_length>
              <multiline type="unicode"></multiline>
              <original_sentence type="unicode">And my garage contains:</original_sentence>
              <proposed_method_name type="str">and_my_garage_contains(step)</proposed_method_name>
              <proposed_sentence type="unicode">And my garage contains:</proposed_sentence>
              <ran type="bool">True</ran>
              <sentence type="unicode">And my garage contains:</sentence>
              <table_indentation type="int">6</table_indentation>
              <failed type="bool">True</failed>
              <failure>
                <reason>
                  <cause>{u'Porsche': 200000, u'Bugatti': 1000000} != {u'Bugatti': 1000000}
- {u'Bugatti': 1000000, u'Porsche': 200000}
+ {u'Bugatti': 1000000}</cause>
                  <traceback>Traceback (most recent call last):
  File "C:\Python27\lib\site-packages\lettuce-0.1.34-py2.7.egg\lettuce\core.py", line 117, in __call__
    ret = self.function(self.step, *args, **kw)
  File "C:\work\Openstack\lettuce\tests\functional\output_features\fail_table\fail_table_steps.py", line 53, in alsothese
    assert_equals(cars, world.cars)
  File "C:\Python27\lib\unittest\case.py", line 509, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Python27\lib\unittest\case.py", line 831, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Python27\lib\unittest\case.py", line 408, in fail
    raise self.failureException(msg)
AssertionError: {u'Porsche': 200000, u'Bugatti': 1000000} != {u'Bugatti': 1000000}
- {u'Bugatti': 1000000, u'Porsche': 200000}
+ {u'Bugatti': 1000000}
</traceback>
                </reason>
              </failure>
            </properties>
            <started>2012-04-10 19:46:16.435000</started>
            <finished>2012-04-10 19:46:16.442000</finished>
            <time>0.007001</time>
            <result>failed</result>
          </step>
        </steps>
        <outlines/>
        <finished>2012-04-10 19:46:16.451000</finished>
        <time>0.094001</time>
        <result>failed</result>
      </scenario>
    </scenarios>
    <finished>2012-04-10 19:46:16.456000</finished>
    <time>0.108001</time>
    <result>failed</result>
  </feature>
</features>
